#!/bin/bash

set -Eeo pipefail

AWS_REGION=eu-west-2

RELEASER_VERSION="2.1.0"
RELEASER_FILE="utils/releaser-${RELEASER_VERSION}"

mkdir -p utils
if [[ ! -f $RELEASER_FILE ]];then
  wget --quiet -O $RELEASER_FILE https://github.com/kudulab/releaser/releases/download/${RELEASER_VERSION}/releaser
fi
source $RELEASER_FILE

# we use aws-helpers to release aws-helpers
source utils/aws-helpers

function check_env {
  if [[ -z "${NHS_ENVIRONMENT}" ]]; then
    echo "Must set NHS_ENVIRONMENT"
    exit 1
  fi
}

function tf_plan {
  check_env

  operation=$1

  terraform init
  terraform get # modules
  if [[ "${operation}" == "create" ]]; then
    terraform plan -var-file=${NHS_ENVIRONMENT}.tfvars -out="${NHS_ENVIRONMENT}.tfplan"
  elif [[ "${operation}" == "destroy" ]]; then
    terraform plan -var-file=${NHS_ENVIRONMENT}.tfvars -out="${NHS_ENVIRONMENT}.tfplan" -destroy
  else
    echo "Unknown operation (should be create or destroy), got: ${operation}"
    exit 1
  fi
}

function tf_apply {
  terraform init
  terraform get # modules
  terraform apply ${NHS_ENVIRONMENT}.tfplan
  terraform output -json > ${NHS_ENVIRONMENT}-tf-out.json
}

function setup_github_credentials {
  # GITHUB_CREDENTIALS should be in format of account-name:api-key
  export GITHUB_CREDENTIALS=$(get_aws_ssm_secret "/repo/prod/user-input/external/gocd-github-api-key")
  OLD_URL=$(git remote get-url origin)
  NEW_URL=$(echo $OLD_URL | sed "s|https://|https://$GITHUB_CREDENTIALS@|g")
  git remote set-url origin $NEW_URL
}

command="$1"
case "${command}" in
  tf)
      dojo "bash"
      ;;
  _tf_plan)
      check_env
      if [ -f ${NHS_ENVIRONMENT}-tf-out.json ]; then
        bucket_name=$(cat ${NHS_ENVIRONMENT}-tf-out.json | jq -r ".state_store.value")
        aws s3 cp "s3://${bucket_name}/terraform.tfstate" terraform.tfstate
      fi
      tf_plan "$2"
      ;;
  tf_plan)
      dojo "./tasks _tf_plan $2"
      ;;
  _tf_apply)
      tf_apply
      bucket_name=$(cat ${NHS_ENVIRONMENT}-tf-out.json | jq -r ".state_store.value")
      aws s3 cp terraform.tfstate "s3://${bucket_name}/terraform.tfstate"
      ;;
  tf_apply)
      dojo "./tasks _tf_apply"
      ;;
# Release and management of lifecycle for aws-helpers script
  set_version)
      releaser::bump_changelog_version "$2" "$3"
      ;;
  verify_version)
      releaser::verify_release_ready
      ;;
  release)
      releaser::verify_release_ready
      setup_github_credentials
      releaser::git_tag_from_changelog
      ;;
  publish)
      # publish the just released version
      setup_github_credentials
      VERSION=$(releaser::get_last_git_tagged_version)
      releaser::prepare_github_release_bin
      GITHUB_USER=nhsconnect
      GITHUB_REPO=prm-deductions-support-infra
      $GHRELEASE_BIN release \
        --user $GITHUB_USER \
        --repo $GITHUB_REPO \
        --tag $VERSION \
        --name $VERSION

      $GHRELEASE_BIN upload \
        --user $GITHUB_USER \
        --repo $GITHUB_REPO \
        --tag $VERSION \
        --name "aws-helpers" \
        --file utils/aws-helpers
      ;;
esac
